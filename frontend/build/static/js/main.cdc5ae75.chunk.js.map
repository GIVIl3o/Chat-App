{"version":3,"sources":["redux/actionTypes.js","redux/reducers/selfReducer.js","redux/reducers/socketReducer.js","redux/reducers/UIReducer.js","redux/reducers/usersReducer.js","redux/store.js","pages/Login.js","pages/Registration.js","components/ChangePicture.js","components/ProfileImage.js","components/ChangePassword.js","components/Account.js","components/User.js","components/UsersList.js","components/RegisteredMessages.js","components/ChatArea.js","components/Messaging.js","pages/ChatPage.js","utils/ProtectedRoute.js","utils/UnprotectedRoute.js","App.js","index.js"],"names":["SET_AUTHENTICATED","OPEN_SOCKET","CLOSE_SOCKET","SET_SHOW_ACCOUNT","SET_SHOW_PASSWORD","SET_USER_MESSAGE","SET_ACTIVE_USER","SET_USERS","NEW_MISSED_MESSAGE","ADD_NEW_USER","SET_USER_ONLINE","SET_USER_OFFLINE","defaultUserState","jwt","username","selfReducers","state","action","type","loading","defaultState","socket","socketReducer","openSocket","query","localStorage","getItem","close","showAccount","undefined","showPassword","messageSuccess","userMessage","UIReducer","Object","assign","success","message","usersReducers","newState","user","users","map","activeUser","missedMessages","length","find","msg","from","online","reducers","combineReducers","self","UI","store","createStore","decoded","jwtDecode","exp","Date","now","dispatch","e","Login","password","errorMessage","onChange","event","setState","target","name","value","loginAttempt","a","preventDefault","axios","post","then","response","setItem","data","props","history","push","catch","error","setTimeout","className","this","placeholder","autoFocus","onClick","to","React","Component","connect","Registration","passwordRepeat","image","imgChange","files","startsWith","registrationAttempt","formData","FormData","append","headers","htmlFor","id","disabled","ChangePicture","updateImage","fileReader","FileReader","readAsArrayBuffer","onload","canChange","emit","result","profileChanged","ProfileImage","profileChange","forceUpdate","on","removeListener","src","alt","ChangePassword","currentPassword","newPassword","newPasswordRepeat","submitChange","classNames","Account","logout","removeItem","userMessageClasses","User","setActive","classes","userClasses","UsersList","onlineUsers","filter","offlineUsers","key","RegisteredMessages","messages","viewMore","receiveMessage","getMessages","currentMessages","sender","offset","count","reverse","moreMessages","prevProps","chatEnd","scrollIntoView","myMessage","ref","ChatArea","toSendMessage","sendMessage","onKeyDown","shiftKey","maxRows","Messaging","ChatPage","jwtExpiredListener","component","exact","path","App","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdc5ae75.chunk.js","sourcesContent":["export const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const OPEN_SOCKET = \"OPEN_SOCKET\";\nexport const CLOSE_SOCKET = \"CLOSE_SOCKET\";\nexport const SET_SHOW_ACCOUNT = \"SET_SHOW_ACCOUNT\";\nexport const SET_SHOW_PASSWORD = \"SET_SHOW_PASSWORD\";\nexport const SET_USER_MESSAGE = \"SET_USER_MESSAGE\";\nexport const SET_ACTIVE_USER = \"SET_ACTIVE_USER\";\nexport const SET_USERS = \"SET_USERS\";\nexport const NEW_MISSED_MESSAGE = \"NEW_MISSED_MESSAGE\";\nexport const ADD_NEW_USER = \"ADD_NEW_USER\";\nexport const SET_USER_ONLINE = \"SET_USER_ONLINE\";\nexport const SET_USER_OFFLINE = \"SET_USER_OFFLINE\";\n","import { SET_AUTHENTICATED } from \"../actionTypes\";\n\nconst defaultUserState = {\n  jwt: \"\",\n  username: \"\"\n};\n\nfunction selfReducers(state = defaultUserState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        loading: state.loading,\n        jwt: action.jwt,\n        username: action.username\n      };\n    default:\n      return state;\n  }\n}\n\nexport default selfReducers;\n","import openSocket from \"socket.io-client\";\n\nimport { OPEN_SOCKET, CLOSE_SOCKET } from \"../actionTypes\";\n\nconst defaultState = {\n  socket: null\n};\n\nfunction socketReducer(state = defaultState, action) {\n  switch (action.type) {\n    case OPEN_SOCKET:\n      return {\n        socket: openSocket(\"ws://localhost:3001\", {\n          query: { jwt: localStorage.getItem(\"jwt\") }\n        })\n      };\n    case CLOSE_SOCKET:\n      state.socket.close();\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default socketReducer;\n","import {\n  SET_SHOW_ACCOUNT,\n  SET_SHOW_PASSWORD,\n  SET_USER_MESSAGE\n} from \"../actionTypes\";\n\nconst defaultState = {\n  showAccount: undefined,\n  showPassword: undefined,\n  messageSuccess: false,\n  userMessage: \"\"\n};\n\nfunction UIReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_SHOW_ACCOUNT:\n      return Object.assign({}, state, { showAccount: !state.showAccount });\n    case SET_SHOW_PASSWORD:\n      return Object.assign({}, state, { showPassword: !state.showPassword });\n    case SET_USER_MESSAGE:\n      return Object.assign({}, state, {\n        messageSuccess: action.success,\n        userMessage: action.message\n      });\n    default:\n      return state;\n  }\n}\n\nexport default UIReducer;\n","import {\n  SET_USERS,\n  SET_ACTIVE_USER,\n  NEW_MISSED_MESSAGE,\n  ADD_NEW_USER,\n  SET_USER_ONLINE,\n  SET_USER_OFFLINE\n} from \"../actionTypes\";\n\nconst defaultUserState = [];\n\n// user = {username,activeUser,missedMessages,online}\n\nfunction usersReducers(state = defaultUserState, action) {\n  let newState;\n  let user;\n  switch (action.type) {\n    case SET_USERS:\n      newState = action.users.map(user =>\n        Object.assign({}, user, { activeUser: false, missedMessages: false })\n      );\n      if (newState.length) newState[0].activeUser = true;\n      return newState;\n    case SET_ACTIVE_USER:\n      newState = [...state];\n      newState.find(user => user.activeUser).activeUser = false;\n      user = newState.find(user => user.username === action.activeUser);\n      user.activeUser = true;\n      user.missedMessages = false;\n      return newState;\n    case NEW_MISSED_MESSAGE:\n      newState = [...state];\n      user = newState.find(user => user.username === action.msg.from);\n      user.missedMessages = true;\n      return newState;\n    case ADD_NEW_USER:\n      return [\n        ...state,\n        {\n          username: action.username,\n          activeUser: false,\n          missedMessages: false,\n          online: false\n        }\n      ];\n    case SET_USER_ONLINE:\n      newState = [...state];\n      user = newState.find(user => user.username === action.username);\n      if (user) user.online = true;\n      return newState;\n    case SET_USER_OFFLINE:\n      newState = [...state];\n      user = newState.find(user => user.username === action.username);\n      if (user) user.online = false;\n      return newState;\n    default:\n      return state;\n  }\n}\n\nexport default usersReducers;\n","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport jwtDecode from \"jwt-decode\";\n\nimport self from \"./reducers/selfReducer\";\nimport socket from \"./reducers/socketReducer\";\nimport UI from \"./reducers/UIReducer\";\nimport users from \"./reducers/usersReducer\";\n\nimport { OPEN_SOCKET, SET_AUTHENTICATED } from \"./actionTypes\";\n\nconst reducers = combineReducers({\n  self,\n  socket,\n  UI,\n  users\n});\n\nconst store = createStore(reducers);\n\ntry {\n  const decoded = jwtDecode(localStorage.getItem(\"jwt\"));\n  if (decoded.exp * 1000 > Date.now()) {\n    store.dispatch({\n      type: SET_AUTHENTICATED,\n      jwt: localStorage.getItem(\"jwt\"),\n      username: decoded.username\n    });\n    store.dispatch({ type: OPEN_SOCKET });\n  }\n} catch (e) {}\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SET_AUTHENTICATED, OPEN_SOCKET } from \"../redux/actionTypes\";\nimport { connect } from \"react-redux\";\n\nimport \"../styles/authentication.css\";\n\nclass Login extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errorMessage: \"\"\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  loginAttempt = async event => {\n    event.preventDefault();\n    axios\n      .post(\"/verifyUser\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        localStorage.setItem(\"jwt\", response.data.jwt);\n        this.props.dispatch({ type: OPEN_SOCKET });\n        this.props.dispatch({\n          type: SET_AUTHENTICATED,\n          jwt: response.data.jwt,\n          username: this.state.username\n        });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        const errorMessage = error.response.data;\n        this.setState(errorMessage);\n\n        setTimeout(() => {\n          this.setState({ errorMessage: \"\" });\n        }, 3000);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"authentication\">\n        <form>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={this.onChange}\n            placeholder=\"username\"\n            value={this.state.username}\n            className=\"authentication-inputText\"\n            autoFocus\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={this.onChange}\n            placeholder=\"password\"\n            value={this.state.password}\n            className=\"authentication-inputText\"\n          />\n          <input\n            type=\"submit\"\n            onClick={this.loginAttempt}\n            value=\"Login\"\n            className=\"authentication-inputSubmit\"\n          />\n          <Link to=\"/registration\" className=\"link\">\n            Sign Up\n          </Link>\n          <span className=\"errors\">{this.state.errorMessage}</span>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ self }) => ({\n  loading: self.loading\n});\n\nexport default connect(mapState)(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { SET_AUTHENTICATED, OPEN_SOCKET } from \"../redux/actionTypes\";\n\nimport \"../styles/authentication.css\";\n\nclass Registration extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordRepeat: \"\",\n    errorMessage: \"\",\n    image: null\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  imgChange = event => {\n    const type = event.target.files[0].type;\n    if (type.startsWith(\"image\")) {\n      this.setState({ image: event.target.files[0] });\n    } else {\n      this.setState({ errorMessage: \"File must be an image\" });\n      setTimeout(() => {\n        this.setState({ errorMessage: \"\" });\n      }, 3000);\n    }\n  };\n\n  registrationAttempt = event => {\n    event.preventDefault();\n\n    if (this.state.password !== this.state.passwordRepeat) {\n      this.setState({ errorMessage: \"passwords do not match\" });\n      setTimeout(() => {\n        this.setState({ errorMessage: \"\" });\n      }, 3000);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"username\", this.state.username);\n    formData.append(\"password\", this.state.password);\n    formData.append(\"image\", this.state.image);\n\n    const uploadHeader = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n\n    axios\n      .post(\"/registerUser\", formData, uploadHeader)\n      .then(response => {\n        localStorage.setItem(\"jwt\", response.data.jwt);\n        this.props.dispatch({ type: OPEN_SOCKET });\n        this.props.dispatch({\n          type: SET_AUTHENTICATED,\n          jwt: response.data.jwt,\n          username: this.state.username\n        });\n      })\n      .catch(error => {\n        const errorMessage = error.response.data;\n        this.setState(errorMessage);\n\n        setTimeout(() => {\n          this.setState({ errorMessage: \"\" });\n        }, 3000);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"authentication\">\n        <form>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={this.onChange}\n            placeholder=\"username\"\n            value={this.state.username}\n            className=\"authentication-inputText\"\n            autoFocus\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={this.onChange}\n            placeholder=\"password\"\n            value={this.state.password}\n            className=\"authentication-inputText\"\n          />\n          <input\n            type=\"password\"\n            name=\"passwordRepeat\"\n            onChange={this.onChange}\n            placeholder=\"repeat password\"\n            value={this.state.passwordRepeat}\n            className=\"authentication-inputText\"\n          />\n          <button className=\"setProfile\" type=\"button\">\n            <label htmlFor=\"image-upload\" className=\"change-image\">\n              Profile Picture\n            </label>\n          </button>\n          <input\n            type=\"file\"\n            id=\"image-upload\"\n            onChange={this.imgChange}\n            value=\"\"\n          />{\" \"}\n          <input\n            type=\"submit\"\n            onClick={this.registrationAttempt}\n            value=\"Registration\"\n            className=\"authentication-inputSubmit\"\n            disabled={this.state.image === null}\n          />\n          <Link to=\"/login\" className=\"link\">\n            Sign In\n          </Link>\n          <span className=\"errors\">{this.state.errorMessage}</span>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Registration);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SET_USER_MESSAGE } from \"../redux/actionTypes\";\n\nclass ChangePicture extends React.Component {\n  state = {\n    disabled: false\n  };\n\n  updateImage = event => {\n    const type = event.target.files[0].type;\n    if (!type.startsWith(\"image\")) {\n      this.props.dispatch({\n        type: SET_USER_MESSAGE,\n        success: false,\n        message: \"File must be an image\"\n      });\n      setTimeout(() => {\n        this.props.dispatch({\n          type: SET_USER_MESSAGE,\n          success: false,\n          message: \"\"\n        });\n      }, 3000);\n      return;\n    }\n\n    let fileReader = new FileReader();\n\n    fileReader.readAsArrayBuffer(event.target.files[0]);\n\n    fileReader.onload = () => {\n      this.setState({ canChange: true });\n      this.props.socket.emit(\n        \"changePicture\",\n        {\n          jwt: this.props.jwt,\n          image: fileReader.result\n        },\n        response => {\n          if (response.profileChanged) this.setState(this.state);\n          this.setState({ canChange: false });\n        }\n      );\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <button className=\"setProfile\" disabled={this.state.canChange}>\n          <label htmlFor=\"image-upload\" className=\"change-image\">\n            Change Picture\n          </label>\n        </button>\n        <input\n          type=\"file\"\n          id=\"image-upload\"\n          onChange={this.updateImage}\n          value=\"\"\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ self, socket }) => ({\n  jwt: self.jwt,\n  socket: socket.socket\n});\n\nexport default connect(mapState)(ChangePicture);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ProfileImage extends React.Component {\n  profileChange = () => {\n    this.forceUpdate();\n  };\n\n  componentDidMount() {\n    this.props.socket.on(\n      `ChangeProfile#${this.props.username}`,\n      this.profileChange\n    );\n  }\n\n  componentWillUnmount() {\n    this.props.socket.removeListener(\n      `ChangeProfile#${this.props.username}`,\n      this.profileChange\n    );\n  }\n\n  render() {\n    return (\n      <img\n        src={`/profiles/${this.props.username}?${Date.now()}`}\n        alt=\"Profile\"\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nconst mapProps = ({ socket }) => ({\n  socket: socket.socket\n});\n\nexport default connect(mapProps)(ProfileImage);\n","import React from \"react\";\nimport { SET_SHOW_PASSWORD, SET_USER_MESSAGE } from \"../redux/actionTypes\";\nimport { connect } from \"react-redux\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    currentPassword: \"\",\n    newPassword: \"\",\n    newPasswordRepeat: \"\"\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  submitChange = e => {\n    e.preventDefault();\n\n    if (this.state.newPassword !== this.state.newPasswordRepeat) {\n      this.props.dispatch({\n        type: SET_USER_MESSAGE,\n        success: false,\n        message: \"Passwords don't match\"\n      });\n      setTimeout(() => {\n        this.props.dispatch({\n          type: SET_USER_MESSAGE,\n          success: false,\n          message: \"\"\n        });\n      }, 3000);\n      return;\n    }\n\n    this.props.socket.emit(\n      \"changePassword\",\n      {\n        jwt: this.props.jwt,\n        currentPassword: this.state.currentPassword,\n        newPassword: this.state.newPassword\n      },\n      response => {\n        this.setState({\n          currentPassword: \"\",\n          newPassword: \"\",\n          newPasswordRepeat: \"\"\n        });\n\n        this.props.dispatch({ type: SET_USER_MESSAGE, ...response });\n\n        setTimeout(() => {\n          this.props.dispatch({\n            type: SET_USER_MESSAGE,\n            success: false,\n            message: \"\"\n          });\n        }, 3000);\n      }\n    );\n  };\n\n  classNames = \"animation-settings no-height\"; // default classes\n  render() {\n    if (this.props.showPassword !== undefined)\n      this.classNames =\n        \"animation-settings \" +\n        (this.props.showPassword ? \"unfold-settings\" : \"fold-settings\");\n\n    return (\n      <div className=\"changePassword\">\n        <button\n          className=\"account-button\"\n          onClick={() => this.props.dispatch({ type: SET_SHOW_PASSWORD })}\n        >\n          Change Password\n        </button>\n        <div className={this.classNames}>\n          <form>\n            <input\n              type=\"password\"\n              className=\"change-password\"\n              placeholder=\"Your Current Password\"\n              name=\"currentPassword\"\n              value={this.state.currentPassword}\n              onChange={this.onChange}\n            />\n            <input\n              type=\"password\"\n              className=\"change-password\"\n              placeholder=\"New Password\"\n              name=\"newPassword\"\n              value={this.state.newPassword}\n              onChange={this.onChange}\n            />\n            <input\n              type=\"password\"\n              className=\"change-password\"\n              placeholder=\"Repeat New Password\"\n              name=\"newPasswordRepeat\"\n              value={this.state.newPasswordRepeat}\n              onChange={this.onChange}\n            />\n            <input\n              type=\"submit\"\n              onClick={this.submitChange}\n              value=\"Change Password\"\n              className=\"account-button smaller-centered\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ self, socket, UI }) => ({\n  jwt: self.jwt,\n  socket: socket.socket,\n  showPassword: UI.showPassword\n});\n\nexport default connect(mapProps)(ChangePassword);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  SET_AUTHENTICATED,\n  CLOSE_SOCKET,\n  SET_SHOW_ACCOUNT\n} from \"../redux/actionTypes\";\nimport ChangePicture from \"./ChangePicture\";\nimport ProfileImage from \"./ProfileImage\";\nimport ChangePassword from \"./ChangePassword\";\nimport \"../styles/account.css\";\n\nclass Account extends React.Component {\n  logout = () => {\n    localStorage.removeItem(\"jwt\");\n    this.props.dispatch({ type: CLOSE_SOCKET });\n    this.props.dispatch({ type: SET_AUTHENTICATED, jwt: \"\", username: \"\" });\n  };\n\n  classNames = \"animation-settings no-height\";\n\n  render() {\n    if (this.props.showAccount !== undefined)\n      this.classNames =\n        \"animation-settings \" +\n        (this.props.showAccount ? \"unfold-settings\" : \"fold-settings\");\n\n    const userMessageClasses =\n      \"user-message \" + (this.props.messageSuccess ? \"message-success\" : \"\");\n\n    return (\n      <div className=\"account\">\n        <div\n          className=\"account-settings\"\n          onClick={() => this.props.dispatch({ type: SET_SHOW_ACCOUNT })}\n        >\n          <ProfileImage\n            username={this.props.username}\n            className=\"profile-picture\"\n          />\n          <span className=\"profile-text\">Profile</span>\n        </div>\n\n        <div className={this.classNames}>\n          <ChangePassword />\n          <ChangePicture />\n          <button className=\"account-button\" onClick={this.logout}>\n            Logout\n          </button>\n\n          <span className={userMessageClasses}>{this.props.userMessage}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ self, socket, UI }) => ({\n  username: self.username,\n  socket: socket.socket,\n  showAccount: UI.showAccount,\n  messageSuccess: UI.messageSuccess,\n  userMessage: UI.userMessage\n});\n\nexport default connect(mapProps)(Account);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ProfileImage from \"./ProfileImage\";\nimport \"../styles/messaging.css\";\nimport { SET_ACTIVE_USER } from \"../redux/actionTypes\";\n\nclass User extends React.Component {\n  setActive = () => {\n    this.props.dispatch({\n      type: SET_ACTIVE_USER,\n      activeUser: this.props.username\n    });\n  };\n\n  render() {\n    const username = this.props.username;\n    const online = this.props.online ? \"Online\" : \"Offline\";\n    const classes = \"user-active \" + (this.props.online ? \"user-online\" : \"\");\n    const userClasses =\n      (this.props.missedMessages ? \"missed-messages\" : \"\") +\n      (this.props.activeUser ? \"activeUser\" : \"\");\n\n    return (\n      <div className={`user ${userClasses}`} onClick={this.setActive}>\n        <ProfileImage username={username} className=\"user-avatar\" />\n        <div className=\"user-information\">\n          <span className=\"user-username\">{username}</span>\n          <span className={classes}>{\"\" + online}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(User);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  SET_USERS,\n  ADD_NEW_USER,\n  SET_USER_ONLINE,\n  SET_USER_OFFLINE\n} from \"../redux/actionTypes\";\n\nimport User from \"./User\";\n\nclass UsersList extends React.Component {\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    this.props.socket.emit(\n      \"getUsers\",\n      {\n        jwt: this.props.jwt\n      },\n      users => {\n        this.props.dispatch({ type: SET_USERS, users });\n      }\n    );\n    this.props.socket.on(\"userCreated\", user => {\n      //this.setState({ users: [...this.state.users, user] });\n      this.props.dispatch({ type: ADD_NEW_USER, username: user.username });\n    });\n\n    /*function flipOnline(user) {\n      return function innerMap(currentUser) {\n        if (currentUser.username === user.username)\n          currentUser.online = !currentUser.online;\n        return currentUser;\n      };\n    }*/\n\n    this.props.socket.on(\"userConnect\", user => {\n      this.props.dispatch({ type: SET_USER_ONLINE, username: user.username });\n      //this.setState({ users: this.state.users.map(flipOnline(user)) });\n    });\n\n    this.props.socket.on(\"userDisconnect\", user => {\n      this.props.dispatch({ type: SET_USER_OFFLINE, username: user.username });\n\n      //this.setState({ users: this.state.users.map(flipOnline(user)) });\n    });\n  }\n\n  render() {\n    const onlineUsers = this.props.users.filter(user => user.online);\n    const offlineUsers = this.props.users.filter(user => !user.online);\n    return (\n      <div className=\"online-people\">\n        {onlineUsers.map(user => (\n          <User\n            key={user.username}\n            username={user.username}\n            activeUser={user.activeUser}\n            missedMessages={user.missedMessages}\n            online={user.online}\n          />\n        ))}\n        {offlineUsers.map(user => (\n          <User\n            key={user.username}\n            username={user.username}\n            activeUser={user.activeUser}\n            missedMessages={user.missedMessages}\n            online={user.online}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ self, socket, users }) => ({\n  jwt: self.jwt,\n  username: self.username,\n  socket: socket.socket,\n  users\n});\n\nexport default connect(mapProps)(UsersList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NEW_MISSED_MESSAGE } from \"../redux/actionTypes\";\n\nclass RegisteredMessages extends React.Component {\n  state = {\n    messages: [],\n    viewMore: true,\n  }\n\n  receiveMessage = (msg) => {\n    const activeUser = this.props.activeUser;\n    if (activeUser === msg.from || activeUser === msg.to)\n      this.setState({ messages: [...this.state.messages, msg] });\n    else {\n      this.props.dispatch({ type: NEW_MISSED_MESSAGE, msg });\n    }\n  }\n\n  getMessages = (currentMessages) => {\n    this.props.socket.emit(\n      \"getMessages\",\n      {\n        jwt: this.props.jwt,\n        sender: this.props.activeUser,\n        offset: currentMessages.length,\n        count: 10\n      },\n      messages => {\n        messages.reverse();\n        const viewMore = messages.length >= 10;\n        this.setState({ messages: [...messages, ...currentMessages], viewMore });\n      }\n    );\n  }\n\n  componentDidMount() {\n    this.getMessages(this.state.messages);\n    this.props.socket.on(\"receiveMessage\", this.receiveMessage);\n  }\n\n  componentWillUnmount() {\n    this.props.socket.removeListener(\"receivedMessage\", this.receiveMessage);\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.activeUser !== this.props.activeUser) {\n      this.getMessages([]);\n    }\n\n    this.chatEnd.scrollIntoView();\n  }\n\n  moreMessages = () => {\n    this.getMessages(this.state.messages);\n  }\n\n  render() {\n    const renderMessage = (message) => {\n      const myMessage = message.from !== this.props.activeUser ? \"send-message\" : \"received-message\";\n      return (\n        <div className={`message ${myMessage}`} key={message.id}>\n          <span>{message.message}</span>\n        </div>\n      );\n    }\n    const viewMore = this.state.viewMore ?\n      <span className=\"more-messages\" onClick={this.moreMessages}>View More</span> :\n      \"\";\n\n    return (\n      <div className=\"registered-messages\">\n        {viewMore}\n        {this.state.messages.map(renderMessage)}\n        <div ref={(ref) => this.chatEnd = ref} />\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ self, users, socket }) => {\n  let activeUser = users.find(user => user.activeUser);\n  activeUser = (activeUser || { username: \"alex\" }).username;\n\n  return {\n    jwt: self.jwt,\n    socket: socket.socket,\n    activeUser\n  };\n};\n\nexport default connect(mapProps)(RegisteredMessages);\n","import React from \"react\";\nimport RegisteredMessages from \"./RegisteredMessages\";\nimport { connect } from \"react-redux\";\nimport AutoSizeTextArea from 'react-textarea-autosize';\n\nclass ChatArea extends React.Component {\n  state = {\n    toSendMessage: \"\",\n  }\n\n  sendMessage = () => {\n    this.props.socket.emit(\"onMessage\", {\n      jwt: this.props.jwt,\n      to: this.props.activeUser,\n      message: this.state.toSendMessage\n    })\n    this.setState({ toSendMessage: \"\" });\n  }\n\n  onKeyDown = (e) => {\n    if (!e.shiftKey && e.key === \"Enter\") {\n      if (this.state.toSendMessage !== \"\")\n        this.sendMessage();\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chat\" >\n        <RegisteredMessages />\n        <AutoSizeTextArea\n          maxRows={3}\n          onChange={e => this.setState({ toSendMessage: e.target.value })}\n          className=\"input-message\"\n          value={this.state.toSendMessage}\n          onKeyDown={this.onKeyDown}\n          autoFocus\n        />\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ self, users, socket }) => {\n  let activeUser = users.find(user => user.activeUser);\n  activeUser = (activeUser || { username: \"alex\" }).username;\n\n  return {\n    jwt: self.jwt,\n    socket: socket.socket,\n    activeUser\n  };\n};\n\nexport default connect(mapProps)(ChatArea);\n","import React from \"react\";\nimport UsersList from \"./UsersList\";\nimport ChatArea from \"./ChatArea\";\n\nclass Messaging extends React.Component {\n  render() {\n    return (\n      <div className=\"messaging\">\n        <UsersList />\n        <ChatArea />\n      </div>\n    );\n  }\n}\n\nexport default Messaging;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Account from \"../components/Account\";\nimport Messaging from \"../components/Messaging\";\nimport { CLOSE_SOCKET, SET_AUTHENTICATED } from \"../redux/actionTypes\";\n\nimport \"../styles/account.css\";\n\nclass ChatPage extends React.Component {\n  jwtExpiredListener = () => {\n    localStorage.removeItem(\"jwt\");\n    this.props.dispatch({ type: CLOSE_SOCKET });\n    this.props.dispatch({ type: SET_AUTHENTICATED, jwt: \"\", username: \"\" });\n  };\n\n  componentDidMount() {\n    this.props.socket.on(\"jwtExpired\", this.jwtExpiredListener);\n  }\n\n  componentWillUnmount() {\n    this.props.socket.removeListener(\"jwtExpired\", this.jwtExpiredListener);\n  }\n\n  render() {\n    return (\n      <div className=\"chat-container\">\n        <Messaging />\n        <Account />\n      </div>\n    );\n  }\n}\n\nconst mapProps = ({ socket }) => ({\n  socket: socket.socket\n});\n\nexport default connect(mapProps)(ChatPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component, jwt }) => {\n  if (jwt) {\n    return <Route exact path=\"/\" component={component} />;\n  } else {\n    return <Route exact path=\"/\" component={() => <Redirect to=\"/login\" />} />;\n  }\n};\n\nconst mapState = state => ({\n  jwt: state.self.jwt\n});\n\nexport default connect(mapState)(ProtectedRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nconst UnprotectedRoute = ({ component, jwt, path }) => {\n  if (jwt) {\n    return <Route component={() => <Redirect to=\"/\" />} exact path={path} />;\n  } else {\n    return <Route component={component} exact path={path} />;\n  }\n};\n\nconst mapState = state => ({\n  jwt: state.self.jwt\n});\n\nexport default connect(mapState)(UnprotectedRoute);\n","import React from \"react\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport Login from \"./pages/Login\";\nimport { Router } from \"react-router-dom\";\nimport Registration from \"./pages/Registration\";\nimport ChatPage from \"./pages/ChatPage\";\nimport { createBrowserHistory } from \"history\";\n\nimport ProtectedRoute from \"./utils/ProtectedRoute\";\nimport UnprotectedRoute from \"./utils/UnprotectedRoute\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={createBrowserHistory()}>\n        <UnprotectedRoute exact path=\"/login\" component={Login} />\n        <UnprotectedRoute exact path=\"/registration\" component={Registration} />\n        <ProtectedRoute exact path=\"/\" component={ChatPage} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}